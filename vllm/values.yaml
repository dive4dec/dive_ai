# Default values for vllm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: vllm/vllm-openai
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v0.5.1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   nvidia.com/gpu: 4
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   nvidia.com/gpu: 2
  #   cpu: 100m
  #   memory: 128Mi

readinessProbe:
  httpGet:
    path: /v1/models  # Assuming '/healthz' is the endpoint that indicates the server is ready to accept traffic
    port: 8000
  initialDelaySeconds: 5  # Number of seconds after the container has started before readiness probes are initiated
  periodSeconds: 10       # How often (in seconds) to perform the probe
  timeoutSeconds: 5       # Number of seconds after which the probe times out
  successThreshold: 1     # Minimum consecutive successes for the probe to be considered successful after having failed
  failureThreshold: 3     # When a probe fails, Kubernetes will try failureThreshold times before giving up

livenessProbe:
  httpGet:
    path: /v1/models  # Assuming '/healthz' is also used for liveness check
    port: 8000
  initialDelaySeconds: 15 # Number of seconds after the container has started before liveness probes are initiated
  periodSeconds: 20       # How often (in seconds) to perform the probe
  timeoutSeconds: 5       # Number of seconds after which the probe times out
  successThreshold: 1     # Minimum consecutive successes for the probe to be considered successful after having failed
  failureThreshold: 3     # When a probe fails, Kubernetes will try failureThreshold times before giving up

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env: []

credentials:
  OPENAI_API_KEY: '123'

volumeMounts:
  - name: models
    mountPath: /models
volumes:
  - name: models
    +: "vllm.models"

pvc:
  models:
    accessMode: ReadWriteOnce
    size: 100Gi

args:
  - --model
  - facebook/opt-125m
  - --download-dir
  - /models

global:
  existingPvc:
    models: ""